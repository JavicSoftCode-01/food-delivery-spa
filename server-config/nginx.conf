# server-config/nginx.conf
# Configuración de Nginx con soporte para compresión Brotli y Gzip
# Para usar con tu aplicación food-delivery-spa

server {
    listen 80;
    server_name your-domain.com;
    root /var/www/food-delivery-spa;
    index index.html;

    # Configuración de compresión
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/xml
        image/svg+xml;

    # Configuración de Brotli (requiere módulo ngx_brotli)
    brotli on;
    brotli_comp_level 6;
    brotli_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/xml
        image/svg+xml;

    # Headers de seguridad
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # Cache para assets estáticos
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        # Servir archivos comprimidos si existen
        location ~* \.js$ {
            try_files $uri $uri.gz $uri.br $uri =404;
            add_header Content-Encoding "br" always;
        }
        
        location ~* \.css$ {
            try_files $uri $uri.gz $uri.br $uri =404;
            add_header Content-Encoding "br" always;
        }
    }

    # Cache para HTML
    location ~* \.html$ {
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
        
        # Servir HTML comprimido si existe
        try_files $uri $uri.gz $uri.br $uri =404;
    }

    # Configuración principal para SPA
    location / {
        try_files $uri $uri/ /index.html;
        
        # Headers para SPA
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }

    # Configuración para API (si tienes backend)
    location /api/ {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # Configuración de logs
    access_log /var/log/nginx/food-delivery-spa.access.log;
    error_log /var/log/nginx/food-delivery-spa.error.log;

    # Configuración de rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    location /api/ {
        limit_req zone=api burst=20 nodelay;
    }
}

# Configuración para HTTPS (recomendado para producción)
server {
    listen 443 ssl http2;
    server_name your-domain.com;
    
    # Certificados SSL (reemplaza con tus rutas)
    ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem;
    
    # Configuración SSL moderna
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # HSTS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # El resto de la configuración es igual que arriba
    root /var/www/food-delivery-spa;
    index index.html;
    
    # ... (copiar toda la configuración del servidor HTTP)
}
